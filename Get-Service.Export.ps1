#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 8ba5697b-bb25-492e-8027-43e04348ace8
# Source File: Get-Service.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
sxEAAB+LCAAAAAAABAC9mF1v2jAUhu8n7T9EudgVg/BdNohU0nWa6EYFrNtd5TgH8OrEyHZasl8/
54OOEqo4FBASgnBev8fnPMcE+hPA7BF4dIUkMtQLQVgwMBum/f6dYfTHnCxIgOg1ofAD+WB/Bflx
CvyRYKiuxLxfy0WkOvcPYGnIaAUDcxoJCX71Fwk89iSq14z76XPF2PdRxbjL0mhVrfhRMZyQypDD
IIBQckQrxm3oUoJHEM3YAwQDt9tFbdzu1HvNFlgXPdMIVCoDc67WUxlnCZsGXhLqcSUwHRZIzqhI
96kyvuVsBVxGmfISY1jJYSglCzYxKmoCc1B6DFmYmwRsW9Q2C9Y2K77i4FACgZySv2DazVazYtSt
TqEoLtCQcQ/4VEZUKa/JGrwrgihbFIq/ozXxld+QrZUQUQHFEhKUlcQQmPbLyheKphJxecsEkSSu
t6Mqo7aIOUBQqJ3BWprbYOYVXx7Vgln4DUPebn738cV+LQnbaIoRTuk4OcR5xl7HOF+dG4ZRWtSe
YqxbzxXntQ7u2moIU5jr7W7FaDQ14mfI/RZ4oNBq6UQX9jmv+SngjogQ0WRchgg/OIwybtozHu7V
b5OiJhQ/5Atxn1zfoaWW4qIPzw1ygZ6cHRq7OMxfhWqekr4eCE+9UTF62uzkbPXhsazS8GhFJ/Bs
UkoufsqfE6W7GC+rzsaT91EqH5etj9LJVkt91zS0e7nHWr+bF/FRYJXq5t7MtscyrrmzRMECvL3Z
3W8FvHVKz3rEO5SJNw1o6dM9cdTuZrddejR1EspGUzOV453oieNxDvOzYjIelWPkMsDLuEBDptTq
nntCFkupUen0rnICQmVr2uORhuQ/jo125wAetUwOhlHrHEpg/ID81WetZI6H43hUyOLLN5dCgK+4
AbGJza5Eti8w45S4R2CvX3teddclpf0cHkefqGLH+PfweYw4eiLB4hAvqzlvz7vzet1rW6iJir1+
+/Q8eyJcYcp4lN0yH9Sy0rtzGIezbC/blRputbUT7O35bTrb/dr2nzT2P1sZCZ6zEQAA#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2016 v5.2.120
     Generated on:       4/27/2016 8:48 PM
     Generated by:        June Blender
     Organization:       SAPIEN Technologies, Inc
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2016
#>
#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Call-Get-Service_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.ServiceProcess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formGetService = New-Object 'System.Windows.Forms.Form'
	$buttonGetService = New-Object 'System.Windows.Forms.Button'
	$labelComputerName = New-Object 'System.Windows.Forms.Label'
	$textboxComputerName = New-Object 'System.Windows.Forms.TextBox'
	$buttonClose = New-Object 'System.Windows.Forms.Button'
	$buttonOK = New-Object 'System.Windows.Forms.Button'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formGetService_Load = {
		#TODO: Initialize Form Controls here
		$textboxComputerName.Text = $env:COMPUTERNAME
	}
	
	$buttonClose_Click = {
		$formGetService.Close()
	}
	
	$buttonOK_Click = {
		#  DialogResult = OK
	}
	
	$buttonGetService_Click = {
		$cn = $textboxComputerName.Text.Trim()
		
		try
		{
			Get-Service -ComputerName $cn | Out-GridView -Title "Services on $cn"
		}
		catch
		{
			$null = [System.Windows.Forms.MessageBox]::Show("Cannot find computer: $cn", 'Computer name error') # Casting the method to [void] suppresses the output. 
		}
	}
	
	$textboxComputerName_TextChanged = {
		$buttonGetService.Enabled = $false
		if ($textboxComputerName.Text.Trim() -ne '')
		{
			$buttonGetService.Enabled = $true
		}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formGetService.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonGetService.remove_Click($buttonGetService_Click)
			$textboxComputerName.remove_TextChanged($textboxComputerName_TextChanged)
			$buttonClose.remove_Click($buttonClose_Click)
			$buttonOK.remove_Click($buttonOK_Click)
			$formGetService.remove_Load($formGetService_Load)
			$formGetService.remove_Load($Form_StateCorrection_Load)
			$formGetService.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch [Exception]
		{ }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formGetService.SuspendLayout()
	#
	# formGetService
	#
	$formGetService.Controls.Add($buttonGetService)
	$formGetService.Controls.Add($labelComputerName)
	$formGetService.Controls.Add($textboxComputerName)
	$formGetService.Controls.Add($buttonClose)
	$formGetService.Controls.Add($buttonOK)
	$formGetService.AcceptButton = $buttonGetService
	$formGetService.ClientSize = '343, 106'
	$formGetService.FormBorderStyle = 'FixedDialog'
	$formGetService.MaximizeBox = $False
	$formGetService.MinimizeBox = $False
	$formGetService.Name = 'formGetService'
	$formGetService.StartPosition = 'CenterScreen'
	$formGetService.Text = 'Get-Service'
	$formGetService.add_Load($formGetService_Load)
	#
	# buttonGetService
	#
	$buttonGetService.Location = '93, 71'
	$buttonGetService.Name = 'buttonGetService'
	$buttonGetService.Size = '157, 23'
	$buttonGetService.TabIndex = 4
	$buttonGetService.Text = 'Get-Service'
	$buttonGetService.UseVisualStyleBackColor = $True
	$buttonGetService.add_Click($buttonGetService_Click)
	#
	# labelComputerName
	#
	$labelComputerName.Location = '12, 9'
	$labelComputerName.Name = 'labelComputerName'
	$labelComputerName.Size = '100, 23'
	$labelComputerName.TabIndex = 3
	$labelComputerName.Text = 'Computer name:'
	#
	# textboxComputerName
	#
	$textboxComputerName.Location = '144, 12'
	$textboxComputerName.Name = 'textboxComputerName'
	$textboxComputerName.Size = '187, 20'
	$textboxComputerName.TabIndex = 2
	$textboxComputerName.add_TextChanged($textboxComputerName_TextChanged)
	#
	# buttonClose
	#
	$buttonClose.Location = '12, 71'
	$buttonClose.Name = 'buttonClose'
	$buttonClose.Size = '75, 23'
	$buttonClose.TabIndex = 1
	$buttonClose.Text = 'Close'
	$buttonClose.UseVisualStyleBackColor = $True
	$buttonClose.add_Click($buttonClose_Click)
	#
	# buttonOK
	#
	$buttonOK.Anchor = 'Bottom, Right'
	$buttonOK.DialogResult = 'OK'
	$buttonOK.Location = '256, 71'
	$buttonOK.Name = 'buttonOK'
	$buttonOK.Size = '75, 23'
	$buttonOK.TabIndex = 0
	$buttonOK.Text = '&OK'
	$buttonOK.UseVisualStyleBackColor = $True
	$buttonOK.add_Click($buttonOK_Click)
	$formGetService.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formGetService.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formGetService.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formGetService.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formGetService.ShowDialog()

} #End Function

#Call the form
Call-Get-Service_psf | Out-Null
